#version 430
layout(local_size_x = 32 , local_size_y = 32) in;
layout (rgba32f, binding = 0) uniform image2D img_output;

uniform sampler2D tex;
uniform sampler2D tex_advect;
uniform float dt;
uniform int b;
uniform int w;

void main(void) {
 float fw = float(w);
 ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
 ivec2 c = coords;
 if(coords.x == 0) c.x = 1;
 if(coords.y == 0) c.y = 1;
 if(coords.x == (w-1)) c.x = w - 2;
 if(coords.y == (w-1)) c.y = w - 2;

 //float dt0 = fw * 0.005;
 float dt0 = fw * dt;
 float i0, i1, j0, j1, s1, s0, t1, t0;
 vec2 adv = -1.0 * vec4(texelFetch(tex_advect, c, 0)).xy;
 float x = float(c.x) - dt0 * adv.x;
 float y = float(c.y) - dt0 * adv.y;
 if(x<0.5) x = 0.5; else if(x > fw + 0.5) x = fw + 0.5; i0 = floor(x); i1 = i0 + 1;
 if(y<0.5) y = 0.5; else if(y > fw + 0.5) y = fw + 0.5; j0 = floor(y); j1 = j0 + 1;
 s1 = x - i0; s0 = 1 - s1; t1 = y - j0; t0 = 1 - t1;
 vec4 p00 = texelFetch(tex, ivec2(i0, j0), 0);
 vec4 p01 = texelFetch(tex, ivec2(i0, j1), 0);
 vec4 p10 = texelFetch(tex, ivec2(i1, j0), 0);
 vec4 p11 = texelFetch(tex, ivec2(i1, j1), 0);
 vec4 value = s0 * (t0*p00 + t1*p01) + s1 * (t0*p10 + t1*p11);

 if(bool(b)){
  if(coords.x == 0) value = vec4(-2.0 * value.x, value.y, value.z, 1.0);
  if(coords.y == 0) value = vec4(value.x, -2.0 * value.y, value.z, 1.0);
  if(coords.x == (w-1)) value = vec4(-2.0 * value.x, value.y, value.z, 1.0);
  if(coords.y == (w-1)) value = vec4(value.x, -2.0 * value.y, value.z, 1.0);
 }

 //value = texelFetch(tex, ivec2(coords.x + adv.x, coords.y + adv.y), 0);
 value = vec4(value.x, value.y, value.z, 1.0);
 imageStore(img_output, coords, value);
}
